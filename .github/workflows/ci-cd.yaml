name: Python application

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Release a Docker container to Heroku. # Your custom step name
      uses: gonuit/heroku-docker-deploy@v1.3.3 # GitHub action name (leave it as it is).
      with:
        # Heroku API key associated with provided user's email.
        # Api Key is available under your Heroku account settings.
        HEROKU_API_TOKEN: ${{ secrets.HEROKU_API_KEY }}
          
        # Name of the heroku application to which the build is to be sent.
        HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        
        # (Optional, default: "./")
        # Dockerfile directory.
        # For example, if you have a Dockerfile in the root of your project, leave it as follows:
        dockerfile_directory: ./

        # (Optional, default: "Dockerfile")
        # Dockerfile name.
        dockerfile_name: Dockerfile

        # (Optional, default: "")
        # Additional options of docker build command.
        docker_options: "--no-cache"

        # (Optional, default: "web")
        # Select the process type for which you want the docker container to be uploaded.
        # By default, this argument is set to "web".
        # For more information look at https://devcenter.heroku.com/articles/process-model
        process_type: web
        if: github.ref == 'refs/heads/master' && job.status == 'success'